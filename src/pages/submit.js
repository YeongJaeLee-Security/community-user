import React, { useState, FormEvent, useCallback, useEffect } from "react";
import Head from "next/head";
import Editor from "@/components/editor/editor";
import EditorTitle from "@/components/editor/editortitle";
import EditorContent from "@/components/editor/editorcontent";
import { useRouter } from "next/router";
import { Box, TextField, Button } from "@mui/material";

import { useAuth } from "@/context/authcontext";

export default function Page() {
  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");
  const router = useRouter();

  const { isLoggedIn } = useAuth();

  const fetchAuth = useCallback(
    async () => {
      if (!isLoggedIn) {
        router.push("/login");
      }
    }, [isLoggedIn, router]
  )

  useEffect(() => {
    fetchAuth();
  }, [fetchAuth]);

  async function createPost(e) {
    e.preventDefault();
    const post = {
      title,
      content,
      author: undefined,
      date: new Date(),
    };

    try {
      const response = await fetch("http://localhost:8000/submit", {
        method: "POST",
        body: JSON.stringify(post),
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: "include",
      });

      if (!response.ok) {
        throw new Error("Failed to submit data. Please try again");
      }

      router.push("/");

    } catch (error) {
      console.error(error);
    } finally {
    }
  }

  return (
    <>
      {/* {error && <div style={{ color: "red "}}>{error}</div>} */}
      <Head>
        <title>Submit to Sesac Community</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box component="form" onSubmit={createPost} sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
        <TextField
          rows={1}
          fullWidth
          variant="outlined"
          value={title}
          onChange={(e) => setTitle(e.target.value)}
          placeholder="Edit your title..."
          required
        />
        <TextField
          multiline
          rows={5}
          fullWidth
          variant="outlined"
          value={content}
          onChange={(e) => setContent(e.target.value)}
          placeholder="Edit your content..."
        />
        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
          <Button variant="contained" color="primary" type="submit" sx={{ bgcolor: 'primary.main' }}>
            Submit
          </Button>
        </Box>
      </Box>
    </>
  );
}
